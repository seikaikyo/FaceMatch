openapi: 3.0.3
info:
  title: FaceMatch 企業級管理系統 API
  description: |
    FaceMatch 承攬商管理系統的完整 REST API 文檔
    
    ## 功能特色
    - 🔐 企業級 AD 驗證 + 本地帳號支援
    - 👥 承攬商管理 (完整 CRUD)
    - 📋 施工單管理 + 多層級簽核工作流程
    - 🎓 年度資格管理 + 快速操作
    - 👤 使用者管理 + 角色權限控制
    - 📊 企業級操作日誌追蹤
    - ⚡ FaceMatch 整合管理
    
    ## 認證方式
    使用 Bearer Token 進行 API 認證
    
    ## API 端點統計
    - 認證系統: 2 個端點
    - 承攬商管理: 4 個端點
    - 施工單管理: 6 個端點
    - 簽核管理: 8 個端點
    - 年度資格管理: 6 個端點
    - FaceMatch 整合: 4 個端點
    - 使用者管理: 7 個端點
    - 企業級日誌: 3 個端點
    - **總計: 43 個 API 端點**
    
  version: 2.2.0
  contact:
    name: FaceMatch 技術支援
    email: support@facematch.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5002
    description: TypeScript 開發環境
  - url: http://localhost:5001
    description: Legacy JavaScript 環境
  - url: https://api.facematch.local
    description: 生產環境

paths:
  # 認證系統 (2 個端點)
  /api/login:
    post:
      tags:
        - 認證系統
      summary: 使用者登入
      description: 支援 AD 網域驗證和本地帳號登入
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: 使用者名稱
                  example: "admin"
                password:
                  type: string
                  description: 密碼
                  example: "admin123"
                useAD:
                  type: boolean
                  description: 是否使用 AD 驗證
                  default: false
      responses:
        '200':
          description: 登入成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: JWT Token
                      user:
                        $ref: '#/components/schemas/User'
                      sessionId:
                        type: string
                        description: 會話 ID
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/ad-config:
    get:
      tags:
        - 認證系統
      summary: 取得 AD 配置狀態
      description: 檢查 Active Directory 配置狀態
      responses:
        '200':
          description: AD 配置狀態
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                    description: AD 是否可用
                  configured:
                    type: boolean
                    description: AD 是否已配置

  # 承攬商管理 (4 個端點)
  /api/contractors:
    get:
      tags:
        - 承攬商管理
      summary: 取得承攬商列表
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [ACTIVE, INACTIVE]
          description: 篩選狀態
        - in: query
          name: search
          schema:
            type: string
          description: 搜尋關鍵字
      responses:
        '200':
          description: 成功取得承攬商列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contractor'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    post:
      tags:
        - 承攬商管理
      summary: 建立承攬商
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorCreate'
      responses:
        '201':
          description: 成功建立承攬商
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Contractor'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/contractors/{id}:
    put:
      tags:
        - 承攬商管理
      summary: 更新承攬商
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 承攬商 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorUpdate'
      responses:
        '200':
          description: 成功更新承攬商
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Contractor'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    delete:
      tags:
        - 承攬商管理
      summary: 刪除承攬商
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 承攬商 ID
      responses:
        '200':
          description: 成功刪除承攬商
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "承攬商已成功刪除"
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # 施工單管理 (6 個端點)
  /api/work-orders:
    get:
      tags:
        - 施工單管理
      summary: 取得施工單列表
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [DRAFT, SUBMITTED, EHS_APPROVED, MANAGER_APPROVED, REJECTED, COMPLETED]
          description: 篩選狀態
        - in: query
          name: contractorId
          schema:
            type: integer
          description: 承攬商 ID
      responses:
        '200':
          description: 成功取得施工單列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkOrder'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - 施工單管理
      summary: 建立施工單
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderCreate'
      responses:
        '201':
          description: 成功建立施工單
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/work-orders/{id}:
    put:
      tags:
        - 施工單管理
      summary: 更新施工單
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 施工單 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkOrderUpdate'
      responses:
        '200':
          description: 成功更新施工單
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - 施工單管理
      summary: 刪除施工單
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 施工單 ID
      responses:
        '200':
          description: 成功刪除施工單
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "施工單已成功刪除"
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/work-orders/{id}/request-status-change:
    post:
      tags:
        - 施工單管理
      summary: 請求狀態變更
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 施工單 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requestedStatus
                - reason
              properties:
                requestedStatus:
                  type: string
                  enum: [DRAFT, SUBMITTED, COMPLETED]
                  description: 請求的狀態
                reason:
                  type: string
                  description: 變更原因
      responses:
        '200':
          description: 狀態變更請求成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "狀態變更請求已提交"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/work-orders/{id}/quick-approve:
    post:
      tags:
        - 施工單管理
      summary: 快速簽核
      description: 管理員專用的快速簽核功能
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 施工單 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: 簽核意見
                  example: "緊急工程，快速核准"
      responses:
        '200':
          description: 快速簽核成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
                  message:
                    type: string
                    example: "快速簽核完成"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  # 簽核管理 (8 個端點)
  /api/work-orders/pending-approval:
    get:
      tags:
        - 簽核管理
      summary: 取得待簽核清單
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功取得待簽核清單
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkOrder'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/approvals/{workOrderId}/submit:
    post:
      tags:
        - 簽核管理
      summary: 提交申請
      description: 將施工單提交到簽核流程
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: workOrderId
          required: true
          schema:
            type: integer
          description: 施工單 ID
      responses:
        '200':
          description: 提交申請成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
                  message:
                    type: string
                    example: "申請已提交，等待職環安簽核"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/approvals/{workOrderId}/ehs:
    post:
      tags:
        - 簽核管理
      summary: 職環安簽核
      description: 職環安層級的簽核操作 (核准/駁回)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: workOrderId
          required: true
          schema:
            type: integer
          description: 施工單 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  type: string
                  enum: [approve, reject]
                  description: 簽核動作
                comment:
                  type: string
                  description: 簽核意見
                  example: "安全措施完備，核准執行"
      responses:
        '200':
          description: 簽核成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
                  message:
                    type: string
                    example: "職環安簽核完成"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/approvals/{workOrderId}/manager:
    post:
      tags:
        - 簽核管理
      summary: 再生經理簽核
      description: 再生經理層級的簽核操作，支援選擇性駁回
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: workOrderId
          required: true
          schema:
            type: integer
          description: 施工單 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  type: string
                  enum: [approve, reject]
                  description: 簽核動作
                comment:
                  type: string
                  description: 簽核意見
                  example: "工程規劃合理，核准執行"
                rejectTo:
                  type: string
                  enum: [APPLICANT, PREVIOUS_LEVEL]
                  description: 駁回對象 (僅在 action=reject 時)
      responses:
        '200':
          description: 簽核成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
                  message:
                    type: string
                    example: "再生經理簽核完成"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/approvals/{workOrderId}/admin-reject:
    post:
      tags:
        - 簽核管理
      summary: 管理員特殊駁回
      description: 管理員可在任何階段駁回到任意層級
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: workOrderId
          required: true
          schema:
            type: integer
          description: 施工單 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rejectTo
                - reason
              properties:
                rejectTo:
                  type: string
                  enum: [APPLICANT, EHS, MANAGER]
                  description: 駁回到的層級
                reason:
                  type: string
                  description: 駁回原因
                  example: "需要重新評估風險等級"
      responses:
        '200':
          description: 管理員駁回成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
                  message:
                    type: string
                    example: "管理員駁回完成"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/approvals/{workOrderId}/resubmit:
    post:
      tags:
        - 簽核管理
      summary: 重新提交被駁回申請
      description: 修正後重新提交被駁回的申請
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: workOrderId
          required: true
          schema:
            type: integer
          description: 施工單 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                changes:
                  type: string
                  description: 修正說明
                  example: "已補強安全措施，更新風險評估"
      responses:
        '200':
          description: 重新提交成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/WorkOrder'
                  message:
                    type: string
                    example: "申請已重新提交"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/work-orders/{id}/history:
    get:
      tags:
        - 簽核管理
      summary: 取得施工單歷史
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 施工單 ID
      responses:
        '200':
          description: 成功取得施工單歷史
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApprovalHistory'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/approvals/{workOrderId}/history:
    get:
      tags:
        - 簽核管理
      summary: 取得簽核歷史
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: workOrderId
          required: true
          schema:
            type: integer
          description: 施工單 ID
      responses:
        '200':
          description: 成功取得簽核歷史
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApprovalHistory'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # 年度資格管理 (6 個端點)
  /api/qualifications:
    get:
      tags:
        - 年度資格管理
      summary: 取得年度資格列表
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: year
          schema:
            type: integer
          description: 篩選年度
          example: 2024
        - in: query
          name: status
          schema:
            type: string
            enum: [ACTIVE, EXPIRED, SUSPENDED]
          description: 篩選狀態
        - in: query
          name: contractorId
          schema:
            type: integer
          description: 承攬商 ID
      responses:
        '200':
          description: 成功取得年度資格列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Qualification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - 年度資格管理
      summary: 建立年度資格
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationCreate'
      responses:
        '201':
          description: 成功建立年度資格
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Qualification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/qualifications/{id}:
    put:
      tags:
        - 年度資格管理
      summary: 更新年度資格
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 資格 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationUpdate'
      responses:
        '200':
          description: 成功更新年度資格
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Qualification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - 年度資格管理
      summary: 刪除年度資格
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 資格 ID
      responses:
        '200':
          description: 成功刪除年度資格
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "年度資格已成功刪除"
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/qualifications/{id}/quick-renew:
    post:
      tags:
        - 年度資格管理
      summary: 快速續約
      description: 快速續約到期或即將到期的資格
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 資格 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - newExpiryDate
              properties:
                newExpiryDate:
                  type: string
                  format: date
                  description: 新到期日期
                  example: "2025-12-31"
                comment:
                  type: string
                  description: 續約備註
                  example: "年度資格自動續約"
      responses:
        '200':
          description: 快速續約成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Qualification'
                  message:
                    type: string
                    example: "資格已成功續約"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/qualifications/{id}/quick-suspend:
    post:
      tags:
        - 年度資格管理
      summary: 快速暫停
      description: 快速暫停有效的資格
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 資格 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: 暫停原因
                  example: "發現安全疑慮，暫停資格"
                suspendUntil:
                  type: string
                  format: date
                  description: 暫停至日期（可選）
                  example: "2024-06-30"
      responses:
        '200':
          description: 快速暫停成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Qualification'
                  message:
                    type: string
                    example: "資格已暫停"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/qualifications/{id}/reactivate:
    post:
      tags:
        - 年度資格管理
      summary: 重新啟用
      description: 重新啟用已暫停的資格
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 資格 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: 重新啟用備註
                  example: "問題已解決，重新啟用資格"
      responses:
        '200':
          description: 重新啟用成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Qualification'
                  message:
                    type: string
                    example: "資格已重新啟用"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # 使用者管理 (7 個端點)
  /api/users:
    get:
      tags:
        - 使用者管理
      summary: 取得使用者列表
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: role
          schema:
            type: string
            enum: [ADMIN, EHS, MANAGER, CONTRACTOR]
          description: 篩選角色
        - in: query
          name: isActive
          schema:
            type: boolean
          description: 篩選帳號狀態
        - in: query
          name: search
          schema:
            type: string
          description: 搜尋關鍵字
      responses:
        '200':
          description: 成功取得使用者列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - 使用者管理
      summary: 建立使用者
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: 成功建立使用者
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/users/{id}:
    put:
      tags:
        - 使用者管理
      summary: 更新使用者
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 使用者 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: 成功更新使用者
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - 使用者管理
      summary: 刪除使用者
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 使用者 ID
      responses:
        '200':
          description: 成功刪除使用者
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "使用者已成功刪除"
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/users/sync-ad:
    post:
      tags:
        - 使用者管理
      summary: 同步 AD 使用者
      description: 從 Active Directory 同步使用者資料
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: AD 網域
                  example: "company.local"
                ou:
                  type: string
                  description: 組織單位（可選）
                  example: "OU=Users,DC=company,DC=local"
      responses:
        '200':
          description: AD 同步成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      syncedUsers:
                        type: integer
                        description: 同步的使用者數量
                        example: 25
                      newUsers:
                        type: integer
                        description: 新增的使用者數量
                        example: 5
                      updatedUsers:
                        type: integer
                        description: 更新的使用者數量
                        example: 20
                  message:
                    type: string
                    example: "AD 使用者同步完成"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/users/{id}/reset-password:
    post:
      tags:
        - 使用者管理
      summary: 重置密碼
      description: 管理員重置使用者密碼
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 使用者 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  description: 新密碼（可選，不提供則系統自動生成）
                  example: "newPassword123"
                sendEmail:
                  type: boolean
                  description: 是否發送通知郵件
                  default: true
      responses:
        '200':
          description: 密碼重置成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      temporaryPassword:
                        type: string
                        description: 臨時密碼（僅在未提供 newPassword 時返回）
                  message:
                    type: string
                    example: "密碼已重置"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/users/{id}/toggle-status:
    post:
      tags:
        - 使用者管理
      summary: 切換帳號狀態
      description: 啟用或停用使用者帳號
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 使用者 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - isActive
              properties:
                isActive:
                  type: boolean
                  description: 帳號狀態
                  example: false
                reason:
                  type: string
                  description: 狀態變更原因
                  example: "員工離職，停用帳號"
      responses:
        '200':
          description: 帳號狀態更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
                    example: "帳號狀態已更新"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  # FaceMatch 整合 (4 個端點)
  /api/facematch/devices:
    get:
      tags:
        - FaceMatch 整合
      summary: 取得 FaceMatch 設備列表
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [ONLINE, OFFLINE, ERROR]
          description: 篩選設備狀態
        - in: query
          name: location
          schema:
            type: string
          description: 篩選設備位置
      responses:
        '200':
          description: 成功取得設備列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FaceMatchDevice'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - FaceMatch 整合
      summary: 註冊 FaceMatch 設備
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaceMatchDeviceCreate'
      responses:
        '201':
          description: 成功註冊設備
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/FaceMatchDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/facematch/sync:
    post:
      tags:
        - FaceMatch 整合
      summary: 同步承攬商資料到 FaceMatch
      description: 將承攬商和員工資料同步到 FaceMatch 系統
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contractorIds:
                  type: array
                  items:
                    type: integer
                  description: 要同步的承攬商 ID 列表（空陣列表示同步全部）
                  example: [1, 2, 3]
                syncType:
                  type: string
                  enum: [FULL, INCREMENTAL]
                  description: 同步類型
                  default: "INCREMENTAL"
                includePhotos:
                  type: boolean
                  description: 是否包含照片資料
                  default: true
      responses:
        '200':
          description: 同步成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      syncedContractors:
                        type: integer
                        description: 同步的承攬商數量
                        example: 5
                      syncedEmployees:
                        type: integer
                        description: 同步的員工數量
                        example: 150
                      syncTime:
                        type: string
                        format: date-time
                        description: 同步完成時間
                  message:
                    type: string
                    example: "FaceMatch 資料同步完成"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/facematch/access-logs:
    get:
      tags:
        - FaceMatch 整合
      summary: 取得門禁記錄
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: 開始日期
          example: "2024-01-01"
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: 結束日期
          example: "2024-01-31"
        - in: query
          name: contractorId
          schema:
            type: integer
          description: 承攬商 ID
        - in: query
          name: deviceId
          schema:
            type: string
          description: 設備 ID
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
          description: 返回記錄數量限制
      responses:
        '200':
          description: 成功取得門禁記錄
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessLog'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: 總記錄數
                        example: 500
                      page:
                        type: integer
                        description: 當前頁數
                        example: 1
                      limit:
                        type: integer
                        description: 每頁記錄數
                        example: 100
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # 企業級日誌 (3 個端點)
  /api/logs:
    get:
      tags:
        - 企業級日誌
      summary: 取得操作日誌
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: 開始日期
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: 結束日期
        - in: query
          name: userId
          schema:
            type: integer
          description: 使用者 ID
        - in: query
          name: action
          schema:
            type: string
          description: 操作類型
        - in: query
          name: module
          schema:
            type: string
            enum: [AUTH, CONTRACTOR, WORK_ORDER, APPROVAL, QUALIFICATION, USER, FACEMATCH]
          description: 模組類型
        - in: query
          name: level
          schema:
            type: string
            enum: [INFO, WARNING, ERROR]
          description: 日誌等級
        - in: query
          name: limit
          schema:
            type: integer
            default: 100
          description: 返回記錄數量限制
      responses:
        '200':
          description: 成功取得操作日誌
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OperationLog'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: 總記錄數
                        example: 1000
                      page:
                        type: integer
                        description: 當前頁數
                        example: 1
                      limit:
                        type: integer
                        description: 每頁記錄數
                        example: 100
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/logs/stats:
    get:
      tags:
        - 企業級日誌
      summary: 取得日誌統計
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum: [TODAY, WEEK, MONTH, YEAR]
          description: 統計期間
          default: "MONTH"
        - in: query
          name: groupBy
          schema:
            type: string
            enum: [USER, MODULE, ACTION, LEVEL]
          description: 分組方式
          default: "MODULE"
      responses:
        '200':
          description: 成功取得日誌統計
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      period:
                        type: string
                        description: 統計期間
                        example: "MONTH"
                      totalLogs:
                        type: integer
                        description: 總日誌數
                        example: 5000
                      errorCount:
                        type: integer
                        description: 錯誤日誌數
                        example: 25
                      warningCount:
                        type: integer
                        description: 警告日誌數
                        example: 100
                      stats:
                        type: array
                        items:
                          type: object
                          properties:
                            category:
                              type: string
                              description: 分類名稱
                            count:
                              type: integer
                              description: 記錄數量
                            percentage:
                              type: number
                              description: 百分比
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/logs/cleanup:
    post:
      tags:
        - 企業級日誌
      summary: 清理舊日誌
      description: 清理指定時間之前的日誌記錄
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - beforeDate
              properties:
                beforeDate:
                  type: string
                  format: date
                  description: 清理此日期之前的日誌
                  example: "2023-12-31"
                keepCritical:
                  type: boolean
                  description: 是否保留重要日誌
                  default: true
                modules:
                  type: array
                  items:
                    type: string
                  description: 要清理的模組（空陣列表示全部）
                  example: ["AUTH", "CONTRACTOR"]
      responses:
        '200':
          description: 日誌清理成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      deletedCount:
                        type: integer
                        description: 刪除的日誌數量
                        example: 1500
                      beforeDate:
                        type: string
                        format: date
                        description: 清理截止日期
                  message:
                    type: string
                    example: "舊日誌清理完成"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: 使用者 ID
          example: 1
        username:
          type: string
          description: 使用者名稱
          example: "admin"
        displayName:
          type: string
          description: 顯示名稱
          example: "系統管理員"
        email:
          type: string
          format: email
          description: 電子郵件
          example: "admin@facematch.com"
        department:
          type: string
          description: 部門
          example: "資訊部"
        role:
          type: string
          enum: [ADMIN, EHS, MANAGER, CONTRACTOR]
          description: 使用者角色
          example: "ADMIN"
        isActive:
          type: boolean
          description: 帳號狀態
          example: true
        jobTitle:
          type: string
          description: 職稱
          example: "系統管理員"
        phoneNumber:
          type: string
          description: 電話
          example: "02-1234-5678"
        employeeId:
          type: string
          description: 員工編號
          example: "EMP001"
        approvalLevel:
          type: integer
          description: 可簽核的層級
          example: 3
        canApprove:
          type: boolean
          description: 是否有簽核權限
          example: true
        authType:
          type: string
          enum: [LOCAL, AD]
          description: 認證類型
          example: "LOCAL"
        lastLogin:
          type: string
          format: date-time
          description: 最後登入時間
        createdAt:
          type: string
          format: date-time
          description: 建立時間
        updatedAt:
          type: string
          format: date-time
          description: 更新時間

    Contractor:
      type: object
      properties:
        id:
          type: integer
          description: 承攬商 ID
          example: 1
        name:
          type: string
          description: 承攬商名稱
          example: "台積電承攬商"
        contact:
          type: string
          description: 聯絡人
          example: "張三"
        phone:
          type: string
          description: 聯絡電話
          example: "02-1234-5678"
        email:
          type: string
          format: email
          description: 電子郵件
          example: "contact@tsmc-contractor.com"
        address:
          type: string
          description: 地址
          example: "新竹科學園區"
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
          description: 狀態
          example: "ACTIVE"
        createdAt:
          type: string
          format: date-time
          description: 建立時間
        updatedAt:
          type: string
          format: date-time
          description: 更新時間

    ContractorCreate:
      type: object
      required:
        - name
        - contact
        - phone
      properties:
        name:
          type: string
          description: 承攬商名稱
          example: "新承攬商"
        contact:
          type: string
          description: 聯絡人
          example: "李四"
        phone:
          type: string
          description: 聯絡電話
          example: "02-2345-6789"
        email:
          type: string
          format: email
          description: 電子郵件
          example: "contact@new-contractor.com"
        address:
          type: string
          description: 地址
          example: "台北市信義區"
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
          description: 狀態
          default: "ACTIVE"

    ContractorUpdate:
      type: object
      properties:
        name:
          type: string
          description: 承攬商名稱
        contact:
          type: string
          description: 聯絡人
        phone:
          type: string
          description: 聯絡電話
        email:
          type: string
          format: email
          description: 電子郵件
        address:
          type: string
          description: 地址
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
          description: 狀態

    WorkOrder:
      type: object
      properties:
        id:
          type: integer
          description: 施工單 ID
          example: 1
        title:
          type: string
          description: 施工單標題
          example: "機台維護工程"
        description:
          type: string
          description: 工作描述
          example: "進行生產線機台定期維護"
        contractorId:
          type: integer
          description: 承攬商 ID
          example: 1
        contractor:
          $ref: '#/components/schemas/Contractor'
        status:
          type: string
          enum: [DRAFT, SUBMITTED, EHS_APPROVED, MANAGER_APPROVED, REJECTED, COMPLETED]
          description: 施工單狀態
          example: "SUBMITTED"
        startDate:
          type: string
          format: date
          description: 開始日期
          example: "2024-01-15"
        endDate:
          type: string
          format: date
          description: 結束日期
          example: "2024-01-20"
        location:
          type: string
          description: 施工地點
          example: "FAB18 2樓"
        riskLevel:
          type: string
          enum: [LOW, MEDIUM, HIGH]
          description: 風險等級
          example: "MEDIUM"
        currentApprover:
          type: string
          description: 當前簽核者
          example: "EHS"
        createdBy:
          type: integer
          description: 建立者 ID
          example: 2
        createdAt:
          type: string
          format: date-time
          description: 建立時間
        updatedAt:
          type: string
          format: date-time
          description: 更新時間

    WorkOrderCreate:
      type: object
      required:
        - title
        - description
        - contractorId
        - startDate
        - endDate
        - location
      properties:
        title:
          type: string
          description: 施工單標題
          example: "機台維護工程"
        description:
          type: string
          description: 工作描述
          example: "進行生產線機台定期維護"
        contractorId:
          type: integer
          description: 承攬商 ID
          example: 1
        startDate:
          type: string
          format: date
          description: 開始日期
          example: "2024-01-15"
        endDate:
          type: string
          format: date
          description: 結束日期
          example: "2024-01-20"
        location:
          type: string
          description: 施工地點
          example: "FAB18 2樓"
        riskLevel:
          type: string
          enum: [LOW, MEDIUM, HIGH]
          description: 風險等級
          default: "MEDIUM"

    WorkOrderUpdate:
      type: object
      properties:
        title:
          type: string
          description: 施工單標題
        description:
          type: string
          description: 工作描述
        contractorId:
          type: integer
          description: 承攬商 ID
        startDate:
          type: string
          format: date
          description: 開始日期
        endDate:
          type: string
          format: date
          description: 結束日期
        location:
          type: string
          description: 施工地點
        riskLevel:
          type: string
          enum: [LOW, MEDIUM, HIGH]
          description: 風險等級

    ApprovalHistory:
      type: object
      properties:
        id:
          type: integer
          description: 歷史記錄 ID
        workOrderId:
          type: integer
          description: 施工單 ID
        approver:
          type: string
          description: 簽核者
          example: "職環安-張三"
        action:
          type: string
          enum: [SUBMIT, APPROVE, REJECT, RESUBMIT]
          description: 操作類型
        level:
          type: string
          enum: [APPLICANT, EHS, MANAGER, ADMIN]
          description: 簽核層級
        comment:
          type: string
          description: 簽核意見
          example: "安全措施完備，核准執行"
        fromStatus:
          type: string
          description: 原狀態
        toStatus:
          type: string
          description: 新狀態
        timestamp:
          type: string
          format: date-time
          description: 操作時間

    Qualification:
      type: object
      properties:
        id:
          type: integer
          description: 資格 ID
          example: 1
        contractorId:
          type: integer
          description: 承攬商 ID
          example: 1
        contractor:
          $ref: '#/components/schemas/Contractor'
        qualificationType:
          type: string
          description: 資格類型
          example: "安全衛生教育訓練"
        year:
          type: integer
          description: 年度
          example: 2024
        issueDate:
          type: string
          format: date
          description: 發證日期
          example: "2024-01-15"
        expiryDate:
          type: string
          format: date
          description: 到期日期
          example: "2024-12-31"
        status:
          type: string
          enum: [ACTIVE, EXPIRED, SUSPENDED]
          description: 狀態
          example: "ACTIVE"
        certificateNumber:
          type: string
          description: 證書編號
          example: "CERT-2024-001"
        issuingAuthority:
          type: string
          description: 發證機關
          example: "勞動部職業安全衛生署"
        notes:
          type: string
          description: 備註
          example: "年度安全訓練完成"
        createdAt:
          type: string
          format: date-time
          description: 建立時間
        updatedAt:
          type: string
          format: date-time
          description: 更新時間

    QualificationCreate:
      type: object
      required:
        - contractorId
        - qualificationType
        - year
        - issueDate
        - expiryDate
      properties:
        contractorId:
          type: integer
          description: 承攬商 ID
          example: 1
        qualificationType:
          type: string
          description: 資格類型
          example: "安全衛生教育訓練"
        year:
          type: integer
          description: 年度
          example: 2024
        issueDate:
          type: string
          format: date
          description: 發證日期
          example: "2024-01-15"
        expiryDate:
          type: string
          format: date
          description: 到期日期
          example: "2024-12-31"
        certificateNumber:
          type: string
          description: 證書編號
          example: "CERT-2024-001"
        issuingAuthority:
          type: string
          description: 發證機關
          example: "勞動部職業安全衛生署"
        notes:
          type: string
          description: 備註
          example: "年度安全訓練完成"

    QualificationUpdate:
      type: object
      properties:
        qualificationType:
          type: string
          description: 資格類型
        year:
          type: integer
          description: 年度
        issueDate:
          type: string
          format: date
          description: 發證日期
        expiryDate:
          type: string
          format: date
          description: 到期日期
        status:
          type: string
          enum: [ACTIVE, EXPIRED, SUSPENDED]
          description: 狀態
        certificateNumber:
          type: string
          description: 證書編號
        issuingAuthority:
          type: string
          description: 發證機關
        notes:
          type: string
          description: 備註

    UserCreate:
      type: object
      required:
        - username
        - displayName
        - email
        - role
      properties:
        username:
          type: string
          description: 使用者名稱
          example: "john.doe"
        displayName:
          type: string
          description: 顯示名稱
          example: "約翰·杜伊"
        email:
          type: string
          format: email
          description: 電子郵件
          example: "john.doe@company.com"
        password:
          type: string
          description: 密碼（AD 使用者可選）
          example: "password123"
        department:
          type: string
          description: 部門
          example: "工程部"
        role:
          type: string
          enum: [ADMIN, EHS, MANAGER, CONTRACTOR]
          description: 使用者角色
          example: "EHS"
        jobTitle:
          type: string
          description: 職稱
          example: "職環安工程師"
        phoneNumber:
          type: string
          description: 電話
          example: "02-1234-5678"
        employeeId:
          type: string
          description: 員工編號
          example: "EMP002"
        approvalLevel:
          type: integer
          description: 可簽核的層級
          example: 2
        canApprove:
          type: boolean
          description: 是否有簽核權限
          default: false
        authType:
          type: string
          enum: [LOCAL, AD]
          description: 認證類型
          default: "LOCAL"

    UserUpdate:
      type: object
      properties:
        displayName:
          type: string
          description: 顯示名稱
        email:
          type: string
          format: email
          description: 電子郵件
        department:
          type: string
          description: 部門
        role:
          type: string
          enum: [ADMIN, EHS, MANAGER, CONTRACTOR]
          description: 使用者角色
        jobTitle:
          type: string
          description: 職稱
        phoneNumber:
          type: string
          description: 電話
        employeeId:
          type: string
          description: 員工編號
        approvalLevel:
          type: integer
          description: 可簽核的層級
        canApprove:
          type: boolean
          description: 是否有簽核權限
        isActive:
          type: boolean
          description: 帳號狀態

    FaceMatchDevice:
      type: object
      properties:
        id:
          type: string
          description: 設備 ID
          example: "FM-001"
        name:
          type: string
          description: 設備名稱
          example: "入口門禁機"
        location:
          type: string
          description: 設備位置
          example: "大門入口"
        ipAddress:
          type: string
          description: IP 地址
          example: "192.168.1.100"
        status:
          type: string
          enum: [ONLINE, OFFLINE, ERROR]
          description: 設備狀態
          example: "ONLINE"
        lastSync:
          type: string
          format: date-time
          description: 最後同步時間
        model:
          type: string
          description: 設備型號
          example: "FaceMatch Pro 3000"
        firmware:
          type: string
          description: 韌體版本
          example: "v2.1.5"
        createdAt:
          type: string
          format: date-time
          description: 註冊時間
        updatedAt:
          type: string
          format: date-time
          description: 更新時間

    FaceMatchDeviceCreate:
      type: object
      required:
        - id
        - name
        - location
        - ipAddress
      properties:
        id:
          type: string
          description: 設備 ID
          example: "FM-002"
        name:
          type: string
          description: 設備名稱
          example: "出口門禁機"
        location:
          type: string
          description: 設備位置
          example: "後門出口"
        ipAddress:
          type: string
          description: IP 地址
          example: "192.168.1.101"
        model:
          type: string
          description: 設備型號
          example: "FaceMatch Pro 3000"
        firmware:
          type: string
          description: 韌體版本
          example: "v2.1.5"

    AccessLog:
      type: object
      properties:
        id:
          type: integer
          description: 記錄 ID
          example: 1
        deviceId:
          type: string
          description: 設備 ID
          example: "FM-001"
        contractorId:
          type: integer
          description: 承攬商 ID
          example: 1
        employeeName:
          type: string
          description: 員工姓名
          example: "張三"
        employeeId:
          type: string
          description: 員工編號
          example: "EMP001"
        accessTime:
          type: string
          format: date-time
          description: 門禁時間
        accessType:
          type: string
          enum: [ENTRY, EXIT]
          description: 進出類型
          example: "ENTRY"
        result:
          type: string
          enum: [SUCCESS, DENIED, ERROR]
          description: 識別結果
          example: "SUCCESS"
        confidence:
          type: number
          description: 識別信心度
          example: 0.95
        photo:
          type: string
          description: 現場照片 URL
          example: "/photos/access/20240115_090030.jpg"
        temperature:
          type: number
          description: 體溫（如有測溫功能）
          example: 36.5

    OperationLog:
      type: object
      properties:
        id:
          type: integer
          description: 日誌 ID
          example: 1
        userId:
          type: integer
          description: 操作使用者 ID
          example: 1
        username:
          type: string
          description: 使用者名稱
          example: "admin"
        module:
          type: string
          enum: [AUTH, CONTRACTOR, WORK_ORDER, APPROVAL, QUALIFICATION, USER, FACEMATCH]
          description: 模組類型
          example: "CONTRACTOR"
        action:
          type: string
          description: 操作類型
          example: "CREATE"
        description:
          type: string
          description: 操作描述
          example: "建立新承攬商：台積電承攬商"
        level:
          type: string
          enum: [INFO, WARNING, ERROR]
          description: 日誌等級
          example: "INFO"
        ipAddress:
          type: string
          description: 操作者 IP
          example: "192.168.1.50"
        userAgent:
          type: string
          description: 瀏覽器資訊
          example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
        requestId:
          type: string
          description: 請求 ID
          example: "req-123456789"
        duration:
          type: integer
          description: 操作耗時（毫秒）
          example: 150
        metadata:
          type: object
          description: 額外資料
          example: {"contractorId": 1, "oldStatus": "INACTIVE", "newStatus": "ACTIVE"}
        timestamp:
          type: string
          format: date-time
          description: 操作時間

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              description: 錯誤代碼
            message:
              type: string
              description: 錯誤訊息
            details:
              type: object
              description: 詳細錯誤資訊

  responses:
    BadRequest:
      description: 請求參數錯誤
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "VALIDATION_ERROR"
              message: "請求參數驗證失敗"
              details:
                field: "name"
                message: "名稱為必填欄位"

    Unauthorized:
      description: 未授權 - 需要登入
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "UNAUTHORIZED"
              message: "未授權存取，請先登入"

    Forbidden:
      description: 禁止存取 - 權限不足
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "FORBIDDEN"
              message: "權限不足，無法執行此操作"

    NotFound:
      description: 資源不存在
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "NOT_FOUND"
              message: "請求的資源不存在"

    InternalError:
      description: 伺服器內部錯誤
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error:
              code: "INTERNAL_ERROR"
              message: "伺服器發生未預期的錯誤"

tags:
  - name: 認證系統
    description: 使用者登入驗證相關 API (2個端點)
  - name: 承攬商管理
    description: 承攬商 CRUD 操作 (4個端點)
  - name: 施工單管理
    description: 施工單 CRUD 操作 (6個端點)
  - name: 簽核管理
    description: 多層級簽核工作流程 (8個端點)
  - name: 年度資格管理
    description: 年度資格 CRUD 和快速操作 (6個端點)
  - name: 使用者管理
    description: 使用者帳號和角色管理 (7個端點)
  - name: FaceMatch 整合
    description: FaceMatch 系統整合管理 (4個端點)
  - name: 企業級日誌
    description: 操作日誌追蹤和分析 (3個端點)